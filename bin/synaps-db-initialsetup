#!/usr/bin/env python
# Copyright 2012 Samsung SDS

import pycassa
import os
import sys

possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                                os.pardir, os.pardir))
if os.path.exists(os.path.join(possible_topdir, "synaps", "__init__.py")):
    sys.path.insert(0, possible_topdir)

from synaps import flags
from synaps import log as logging
from synaps import utils


if __name__ == "__main__":
    flags.FLAGS(sys.argv)
    utils.default_flagfile()
    logging.setup()

    LOG = logging.getLogger(__name__)
    FLAGS = flags.FLAGS    

    keyspace = FLAGS.get("cassandra_keyspace", "synaps_test")
    manager = pycassa.SystemManager()
    
    # drop keyspace
    try:
        manager.drop_keyspace(keyspace)
        LOG.info(_("cassandra keyspace %s dropped") % keyspace)
    except:
        LOG.critical(_("failed to drop cassandra keyspace, %s") % keyspace)

    # initialize database scheme
    try:
        manager.create_keyspace(keyspace,
                                strategy_options={'replication_factor': '1'})
        manager.create_column_family(keyspace=keyspace,
                                     name='MetricLookup',
                                     super=True)
        manager.create_column_family(keyspace=keyspace,
                                     name='Metric',
                                     super=True)
        manager.create_column_family(keyspace=keyspace,
                                     name='MetricArchive',
                                     comparator_type='DateType')
    except:
        LOG.critical(_("failed to initialization"))

